@import "./reset";
@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
@import "./variables";
@import "./grid-section";
@import "./responsive";

@function weight() {
}

body {
  font-family: "Montserrat", sans-serif;
  margin: 0;
  //color: map-get($map: $colors, $key: primary)
}

h1 {
  font-size: 3rem;
  font-weight: 700;
  margin: 2rem;
}

nav {
  color: white;
  font-weight: map-get($map: $font-weights, $key: medium);
  background: $gradient-1;
  position: fixed;
  top: 0px;
  width: 100vw;
  display: flex;
  justify-content: flex-end;
  --ease: all 500ms ease 100ms;
  transition: var(--ease);

  ul {
    display: flex;
    align-items: center;
    li {
      list-style: none;
      margin: 10px 2em 0px 2em; // *10px to compensate for ...
      
    }
  }
}


a {
  color: #fff;
  text-decoration: none;

  display: inline-block;
  padding: 0px 0px 10px 0px; // *... these 10 px here
  position: relative;
  transition: color 0.3s ease 0s;
}

a:hover {
  color:#000;
}
a::after {    
  bottom: 0;
  content: "";
  display: block;
  height: 2px;
  left: 0%;
  position: absolute;
  background: #fff;
  transition: background 0.3s linear 0s, width 0.3s ease 0s;
  width: 0;
  
}
a:hover::after { 
  width: 100%; 
  left: 0; 
  background: #000;
}

.all-content {
  position: relative;
  overflow: scroll;
  scroll-behavior: smooth;
  z-index: -1;
}



.button {
  font-size: 0.75rem;
  font-weight: 700;
  text-transform: uppercase;
  letter-spacing: 0.05rem;
  color: white;
  padding: 1rem 2rem;
  margin: 2rem;
  background: $gradient-1;
  border-radius: 5px;
  border: none;
  //transition: background 0.3s ease 0s;

}
.button:hover {
  background-color: red;
}
// .button:focus {
//   outline: none;
// }



p {
  font-weight: map-get($map: $font-weights, $key: medium);
  margin: 2rem;
}

article {
  margin: 2rem;

  .main {
    line-height: 1.5rem;
    //color: map-get($map: $colors, $key: primary);
    &:hover {
      color: map-get($map: $colors, $key: secondary);
      cursor: pointer;
    }
  }
}
