@import "./reset";
@import url("https://fonts.googleapis.com/css2?family=Montserrat:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap");
@import "./variables";
@import "./grid-section";
@import "./responsive";
@import "./buttons";

/////////////////
body {
  font-family: "Montserrat", sans-serif;
  margin: 0;
  //color: map-get($map: $colors, $key: primary)
}

h1 {
  font-size: 4rem;
  font-weight: 800;
  margin: 2rem;
  color: color(dark-grey);
}
a {
  text-decoration: none;
}
// .display-block {
//   display: block;
// }
// .display-none {
//   display: none;
// }

////////// NAV ////////////////////////////

nav {
  z-index: 10; // nav index needs to be > 0, since .all-content cannot be negative, or buttons would be unclickable
  color: white;
  font-weight: font-weight(medium);
  //this syntax is made available thru functions, see file _variables.scss
  background: $gradient-1;
  position: fixed;
  top: 0px;
  width: 100vw;
  display: flex;
  justify-content: flex-end;
  align-items: center;
  --ease: all 500ms ease 100ms;
  transition: var(--ease);

  ul {
    z-index: 30;
    display: flex;
    align-items: center;
    > li {
      list-style: none;
      margin: 10px 2em 0px 2em; // *10px to compensate for ...
      .menu-item {
        color: #fff;
        text-decoration: none;
        display: inline-block;
        padding: 0px 0px 10px 0px; // *... to compensate for these 10 px here
        position: relative;
        transition: color 0.3s ease 0s;
        &:hover {
          color: #000;
        }
        &::after {
          bottom: 0;
          content: "";
          display: block;
          height: 2px;
          left: 0%;
          position: absolute;
          background: #fff;
          transition: background 0.3s linear 0s, width 0.3s ease 0s;
          width: 0;
        }
        &:hover::after {
          width: 100%;
          left: 0;
          background: #000;
        }
      }
    }
    // ----------Dropdown - submenu----------
    ul {
      display: block;
      list-style: none;
      li {
        display: block;
        font-size: 10pt;
        color: color(dark-grey);
        list-style: none;
        margin: 0px;
        padding: 1rem 1rem;
        border-bottom: 1px solid color(light-grey);
      }
    }
  }

  .fa-bars {
    display: none;
    margin-right: 1rem;
    cursor: pointer;
    &:hover {
      color: color(dark-grey);
    }
    &:active .modal {
      display: block;
    }
  }
}

//--------- Dropdown.---------------------------
.dropdown-trigger {
  position: relative;
  //display: inline-block;
}

.dropdown-content {
  //display: none;// <--this was used when attempting to lauch dropdown without JS
  position: absolute;
  background-color: white;
  min-width: 120px;
  box-shadow: $shadow;
  z-index: 40;
  margin-top: 0px;
  animation: slidein 0.5s ease;
  border-radius: 5px;
}
@keyframes slidein {
  from {
    opacity: 0;
    margin-top: 25px;
  }
  to {
    opacity: 1;
    margin-top: 0px;
  }
}
/*.dropdown-trigger:hover .dropdown-content {
  //<--when hovering over dropdown-trigger show dropdown content
  // modifying the css of another class can be done
  // but this solution only works for sibling or children elements
  // and since we cannot nest the dropdown 
  // (becacuse it contains <a> tags and that's illegal) 
  // ---> we'll have to use JS
  display: block;
}*/
.dropdown-init {
  visibility: hidden;
}
.dropdown-invisible {
  animation: slideout 0.5s ease;
  animation-fill-mode: forwards;
}
.dropdown-visible {
  visibility: visible;
}

@keyframes slideout {
  0% {
    opacity: 1;
    margin-top: 0px;
    visibility: visible;
  }
  100% {
    opacity: 0;
    margin-top: 25px;
    visibility: hidden;
  }
}

//----------Modal(mobile menu)-----------
.modal {
  .close-button {
    display: flex;
      justify-content: flex-end;
      padding: 1rem;
    .close-x {
      transition: 0.3s ease 0s;
      &:hover {
        transform: rotate(180deg);
      }
    }
  }
  .modal-menu {
    display: none;
    --marg: 20px;
    width: calc(100vw - var(--marg));
    height: calc(100vh - var(--marg));
    background-color: white;
    z-index: 20;
    border-radius: 10px;
    box-shadow: $shadow;
    position: fixed;
    top: calc(var(--marg) / 2);
    left: calc(var(--marg) / 2);
    color: color(dark-grey);
    ul {
      li {
        padding: 1rem 2rem;
        .menu-item {
          color:color(dark-grey);
          font-weight: font-weight(medium);
        }
        .dropdown-content-modal {
          margin-top: 1.5rem;
          display: none;
        }
      }
    }
  }
}


/////SOCIAL////////
.social {
  background-color: color(dark-grey);
  height: 2rem;
  width: 100vw;
  display: flex;
  align-items: center;
}
.fab {
  color: white;
  margin: 0 1em;
}
.fa-times {
  background-color: red;
  color: color(dark-grey);
  margin: 0 1em;
  z-index: 50;
}

/////ALL CONTENT////////////////////////////////////////////////

.all-content {
  position: relative;
  overflow: scroll;
  scroll-behavior: smooth;
}

// .button {
//   background: $gradient-1; // --- gradient background couldn't be transitioned
//   border-radius: 5px;
//   border: none;
//   //transition: background 0.3s ease 0s;

// }
// .button:hover {
//   background-color: red;
// }
// .button:focus {
//   outline: none;
// }

p {
  font-weight: map-get($map: $font-weights, $key: medium);
  margin: 2rem;
}

article {
  margin: 2rem;

  .main {
    line-height: 1.5rem;
    font-weight: font-weight(regular);
    color: map-get($colors, middle-grey);
  }
}
